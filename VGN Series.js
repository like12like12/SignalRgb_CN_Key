export function Name() { return "VGN Series"; } 
export function VendorId() { return 0x320f; }
export function ProductId() { return 0x5055; }
export function Publisher() { return "Nollie"; } 
export function DefaultPosition(){return [120, 80];}
export function DefaultScale(){return 5.0;}

export function ControllableParameters() 
{
	return [
		{"property":"shutdownColor", "label":"Shutdown Color", "min":"0", "max":"360", "type":"color", "default":"000000"},
		{"property":"LightingMode", "label":"Lighting Mode", "type":"combobox", "values":["Canvas", "Forced"], "default":"Canvas"},
		{"property":"forcedColor", "label":"Forced Color", "min":"0", "max":"360", "type":"color", "default":"009bde"},
		{"property":"boardModel", "group":"lighting", "label":"Key Type", "type":"combobox", "values":["V98Pro", "S99","N75","N75Pro"], "default":"V98Pro"}];
}

/* 
Time:2023/7/17
Author: Nollie(Nuonuo)
Version:V1.0
*/
const MaxLedsInPacket = 56;

let vKeyNames = [];
let vKeys = [];
let vKeyPositions = [];

/*
S99_vKeys,S99_vKeyPositions
Author:Nuonuo
Generated by python

V98_vKeys,V98_vKeyPositions
Author:Nuonuo
Generated by python

N75Pro_vKeys,N75Pro_vKeyPositions
Author:Nuonuo
Generated by python

N75_vKeys,N75_vKeyPositions,N75_vKeyNames
Author:随机复读的复读姬
*/

const boards =
{
	V98Pro:{
		name: "V98Pro",
		vKeyNames: 		["Esc", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "Del", "Insert", 
						"`", "1", "2", "3", "4", "5", "6","7", "8", "9", "0", "-_", "=+", "Backspace","Page Up", 
						"Tab", "Q", "W", "E", "R", "T", "Y","U", "I", "O", "P", "[", "]", "\\","Page Down", 
						"CapsLock", "A", "S", "D", "F", "G", "H", "J", "K", "L", ";", "'","UnderGlow1", "Enter", "UnderGlow2",
						"Left Shift", "Z", "X", "C","V", "B", "N", "M", ",", ".", "/","Right Shift", "Up Arrow", "Num 1", "Num Enter",
						"Left Ctrl", "Left Win", "Left Alt","Del1", "Insert1", "Space", "Page Up", "UnderGlow3", "UnderGlow4", "Fn","Right Alt", "UnderGlow5", "Left Arrow", "Down Arrow", "Right Arrow",
						"NumLock", "Num /","Num *", "Num -", "Num 7", "Num 8", "Num 9", "Num 4", "Num 5", "Num 6", "Num +", "Num 2", "Num 3", "Num 0", "Num ."],
		vKeys: 			[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
						24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
						45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 
						67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,
						88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104],
		vKeyPositions:  [[0, 0], [2, 0], [3, 0], [4, 0], [5, 0], [7, 0], [8, 0], [9, 0], [10, 0], [12, 0],
						[13, 0], [14, 0], [15, 0], [20, 0], [20, 0], [0, 1], [1, 1], [2, 1], [3, 1], [4, 1],
						[5, 1], [6, 1], [7, 1], [8, 1], [9, 1], [10, 1], [11, 1], [12, 1], [14, 1], [20, 0],
						[1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2], [11, 2],
						[12, 2], [13, 2], [14, 2],[20, 0], [1, 3], [2, 3], [3, 3], [4, 3], [5, 3], [6, 3], [7, 3], 
						[8, 3], [9, 3], [10, 3], [11, 3], [12, 3], [13, 3], [14, 3], [1, 4], [2, 4], [3, 4], [4, 4], 
						[5, 4], [6, 4], [7, 4], [8, 4], [9, 4], [10, 4], [11, 4], [12, 4], [16, 4], [17, 4], [20, 4], 
						[0, 5], [1, 5], [2, 5], [20, 0], [20, 0], [6, 5], [20, 0], [16, 1], [16, 2], [10, 5], [11, 5], 
						[12, 5], [15, 5], [16, 5], [17, 5], [17, 1], [18, 1], [19, 1], [20, 1], [17, 2], [18, 2], [19, 2],
						[17, 3], [18, 3],[19, 3], [20, 2], [18, 4], [19, 4], [18, 5], [19, 5], [20, 5]], 
		size: 			[21, 6]
	},
	S99:{
		name: "S99",
		vKeyNames:      ["Esc", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "Insert", "Home", 
						"Page Up", "`", "1", "2", "3", "4", "5","6", "7", "8", "9", "0", "-_", "=+","Backspace", "Page Down",
						"Del", "Tab", "Q", "W", "E","R", "T", "Y", "U", "I", "O", "P","[", "]", "\\", "CapsLock", "A", "S", "D",
						"F", "G", "H", "J", "K", "L", ";","'", "Enter", "Left Shift", "Z", "X", "C", "V","B", "N", "M", ",", ".",
						"/", "Right Shift","Up Arrow", "Num 1", "Left Ctrl", "Left Win", "Left Alt", "Backspace", "Right Alt",
						"Fn", "Right Alt","Left Arrow", "Down Arrow", "Right Arrow","NumLock", "Num /","Num *", "Num -", "Num 7",
						"Num 8", "Num 9", "Num 4", "Num 5", "Num 6", "Num +", "Num 2", "Num 3", "Num 0", "Num .", "Num Enter", "UnderGlow2", "UnderGlow2"],
		vKeys: 		    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
						15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
						28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
						41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55,
						56, 57, 58, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72,
						73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 89, 90, 92,
						93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
						105, 106, 107, 108, 109, 110, 111, 128, 129],
		vKeyPositions:  [[1, 0], [5, 0], [8, 0], [11, 0], [14, 0], [18, 0], [21, 0], [24, 0], [27, 0], [31, 0],
						[34, 0], [37, 0], [40, 0], [49, 0] , [52, 0], [55, 0], [1, 4], [4, 4], [7, 4], [10, 4],
						[13, 4], [15, 4], [19, 4], [22, 4], [25, 4], [28, 4], [31, 4], [34, 4], [37, 4], [42, 4],
						[58, 0], [44, 0], [1, 7], [5, 7], [8, 7], [11, 7], [14, 7], [17, 7], [20, 7], [23, 7],
						[26, 7], [29, 7], [32, 7], [35, 7], [38, 7], [42, 7], [2, 10], [6, 10], [9, 10], [12, 10], 
						[15, 10], [18, 10], [21, 10], [24, 10], [27, 10], [30, 10], [33, 10], [36, 10], [41, 10], [2, 13], 
						[7, 13], [10, 13], [13, 13], [16, 13], [19, 13], [22, 13], [25, 13], [28, 13], [31, 13], [34, 13], [38, 13],
						[44, 14], [49, 13], [1, 16], [5, 16], [9, 16], [20, 16], [30, 16], [33, 16], [36, 16], [41, 17], [44, 17],
						[47, 17], [49, 4], [52, 4], [55, 4], [58, 4], [49, 7], [52, 7], [55, 7], [49, 10], [52, 10], [55, 10], 
						[58, 9], [52, 13], [55, 13], [52, 16], [55, 16], [58, 15], [58, 13], [58, 7]],
		size: 			[61, 18]
	},
	N75Pro:{
		name: "N75Pro",
		vKeyNames:      ["Esc","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Del", 
	 					"`", "1", "2", "3", "4", "5", "6", "7","8", "9", "0", "-_", "=+", "Backspace","Insert",
						"Tab", "Q", "W", "E", "R", "T", "Y","U", "I", "O", "P", "[", "]", "\\","End", 
						"CapsLock", "A", "S", "D", "F", "G","H", "J", "K", "L", ";", "'", "Enter","Enter","Page Up",
						"Left Shift",  "Left Shift","Z", "X", "C", "V","B", "N", "M", ",", ".", "/", "Right Shift","Up Arrow", "Page Down",
						"Left Ctrl",  "Left Win", "Left Alt", "Led77", "Led78","Led79", "Backspace", "Led81", "Led82", "Right Alt", "FN", "Right Ctrl","Left Arrow", "Down Arrow", "Right Arrow"],
		vKeys: 		    [ 0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15,
						16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
						28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
						40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
						52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
						64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
						76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89],
		vKeyPositions: 	[ [0, 0], [2, 0], [3, 0], [4, 0], [5, 0], [7, 0], [8, 0], [9, 0], [10, 0], 
					    [12, 0], [13, 0], [14, 0], [15, 0], [17, 0], [0, 1], [1, 1], [2, 1], [3, 1],
					  	[4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [9, 1], [10, 1], [11, 1], [12, 1],
					  	[14, 1], [17  , 1], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], 
					  	[9, 2], [10, 2], [11, 2], [12, 2], [13, 2], [15, 2], [18, 1], [18, 2], [1, 3],
						[2, 3], [3, 3], [4, 3], [5, 3], [6, 3], [7, 3], [8, 3], [9, 3], [10, 3], [11, 3],
						[12, 3], [13, 3], [15, 3], [18, 3], [1, 4], [2, 4], [3, 4], [4, 4], [5, 4], [6, 4],
						[7, 4], [8, 4], [9, 4], [10, 4], [11, 4], [12, 4], [13, 4], [16, 4], [18, 4], [1, 5],
						[2, 5], [3, 5], [4, 5], [5, 5], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5], [13, 5], [14, 5], [15, 5], [16, 5], [17, 5]],
		size: 			[19, 6]
	},
	N75:{
		name: "N75",
		vKeyNames:      ["Esc","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Del",                                    //13
					    "`","1","2", "3", "4", "5",  "6", "7", "8", "9", "0",  "-", "+",  "Backspace","Home",                          //13
					    "Tab", "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "[", "]", "\\","Page Up",                             //15
					    "CapsLock", "A", "S", "D", "F", "G", "H", "J", "K", "L", ";", "'","Enter","Page Down",                         //14
					    "Left Shift","Z", "X", "C", "V", "B", "N", "M", ",", ".", "/", "Right Shift","Up Arrow",   "End",              //14
					    "Left Ctrl","Left Win","Left Alt","Space","Right Alt","Fn","Right Ctrl","Left Arrow","Down Arrow","Right Arrow"],
		vKeys: 			[0,8, 16,24,32,40,48,56,64,72,80,88,96,104,
						1,9, 17,25,33,41,49,57,65,73,81,89,97,105,    114,
						2,10,18,26,34,42,50,58,66,74,82,90,98,106,    115,
						3,11,19,27,35,43,51,59,67,75,83,91,   107,    123,
						4,   20,28,36,44,52,60,68,76,84,92,   108,116,122,
						5,13,21,      45,         77,85,101,  109,117,125],
		vKeyPositions:  [[0,0],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[11,0], [12,0],         [14,0],        //14
						[0,1],[1,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[11,1], [12,1], [14,1],        [15,1], //15 
						[0,2],[1,2],[2,2],[3,2],[4,2],[5,2],[6,2],[7,2],[8,2],[9,2],[10,2],[11,2], [12,2], [13,2],        [15,2], //15   
						[0,3],[1,3],[2,3],[3,3],[4,3],[5,3],[6,3],[7,3],[8,3],[9,3],[10,3],[11,3], [12,3],                [15,3], //14
					    [0,4],      [2,4],[3,4],[4,4],[5,4],[6,4],[7,4],[8,4],[9,4],[10,4],[11,4], [12,4],         [14,4],[15,4], //14
						[0,5],[1,5],[2,5],            [5,5],                        [10,5],[11,5], [12,5], [13,5], [14,5],[15,5]],
		size: 			[19, 6]
	},
	ATK75:{
		name: "ATK75",
		vKeyNames:      ["Esc","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Del",                                    //13
					    "`","1","2", "3", "4", "5",  "6", "7", "8", "9", "0",  "-", "+",  "Backspace","Home",                          //13
					    "Tab", "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "[", "]", "\\","Page Up",                             //15
					    "CapsLock", "A", "S", "D", "F", "G", "H", "J", "K", "L", ";", "'","Enter","Page Down",                         //14
					    "Left Shift","Z", "X", "C", "V", "B", "N", "M", ",", ".", "/", "Right Shift","Up Arrow",   "End",              //14
					    "Left Ctrl","Left Win","Left Alt","Space","Right Alt","Fn","Right Ctrl","Left Arrow","Down Arrow","Right Arrow"],
		vKeys: 			[0,8, 16,24,32,40,48,56,64,72,80,88,96,104,
						1,9, 17,25,33,41,49,57,65,73,81,89,97,105,    114,
						2,10,18,26,34,42,50,58,66,74,82,90,98,106,    115,
						3,11,19,27,35,43,51,59,67,75,83,91,   107,    123,
						4,   20,28,36,44,52,60,68,76,84,92,   108,116,122,
						5,13,21,      45,         77,85,101,  109,117,125],
		vKeyPositions:  [[0,0],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[11,0], [12,0],         [14,0],        //14
						[0,1],[1,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[11,1], [12,1], [14,1],        [15,1], //15 
						[0,2],[1,2],[2,2],[3,2],[4,2],[5,2],[6,2],[7,2],[8,2],[9,2],[10,2],[11,2], [12,2], [13,2],        [15,2], //15   
						[0,3],[1,3],[2,3],[3,3],[4,3],[5,3],[6,3],[7,3],[8,3],[9,3],[10,3],[11,3], [12,3],                [15,3], //14
					    [0,4],      [2,4],[3,4],[4,4],[5,4],[6,4],[7,4],[8,4],[9,4],[10,4],[11,4], [12,4],         [14,4],[15,4], //14
						[0,5],[1,5],[2,5],            [5,5],                        [10,5],[11,5], [12,5], [13,5], [14,5],[15,5]],
		size: 			[19, 6]
	}
};



/*
Public function
Operation
*/

function hexToRgb(hex) 
{
	let result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
	let colors = [];
	colors[0] = parseInt(result[1], 16);
	colors[1] = parseInt(result[2], 16);
	colors[2] = parseInt(result[3], 16);

	return colors;
}

function sumArray(array) 
{
	const sum = array.filter(Number.isFinite) 
				   .reduce((acc, num) => acc + num, 0); 
	return sum;
}

function getHighLow(num) 
{
	const high = (num >>> 8) & 0xFF; 
	const low = num & 0xFF; 
	return { high, low }; 
}

/*
Public function
key
*/

function key_init()
{
  let packet = [0x04,0x8c,0x00,0x0b,0x30,0x50,0x01];
  device.write(packet,64);
}

function led_show()
{
  let packet = [0x04,0x93,0x00,0x12,0x30,0x50,0x01];
  device.write(packet,64); 
}

/*init key*/
export function Size() 
{
	device.log('@Size');
	// device.log( boards[boardModel]);
	// return boards[boardModel].size;
}

export function LedNames() 
{
	vKeyNames = boards[boardModel].vKeyNames;

	return vKeyNames;
}

export function LedPositions() 
{
	vKeyPositions = boards[boardModel].vKeyPositions;

	return vKeyPositions;
}

export function onboardModelChanged () 
{

	vKeyNames = boards[boardModel].vKeyNames;
	vKeyPositions = boards[boardModel].vKeyPositions;
	vKeys = boards[boardModel].vKeys;

	device.setName(boards[boardModel].name);
	device.setControllableLeds(vKeyNames, vKeyPositions);
	device.setSize(boards[boardModel].size);
	device.log(`Model set to: ` + boards[boardModel].name);
	device.log('@Nuonuo');
}


export function Initialize() 
{
	vKeyNames = boards[boardModel].vKeyNames;
	vKeyPositions = boards[boardModel].vKeyPositions;
	vKeys = boards[boardModel].vKeys;

	device.setControllableLeds(vKeyNames, vKeyPositions);
	device.setName(boards[boardModel].name);
	device.setSize(boards[boardModel].size);
	device.log(`Model set to: ` + boards[boardModel].name);
	key_init();
	device.log('@Nuonuo V1.0');

}


export function Render() 
{
	sendColors();
}



/*
Get RGB
*/
function sendColors(shutdown = false)
{
	let RGBData = grabColors();
	for(var index = 0; index < 7; index++) 
  {
		let packet = [];
		let rgbPeriod = [];
		rgbPeriod.push(...RGBData.splice(0, MaxLedsInPacket));
		if (index >=5)
		{
			var  RGB_Total = sumArray(rgbPeriod)+((index-5)* MaxLedsInPacket)+ 0x63;
		} 
		else
		{
			var  RGB_Total = sumArray(rgbPeriod)+(index* MaxLedsInPacket)+ 0x4A;
		}	
		packet[0] = 0x04;
		packet[1] = getHighLow(RGB_Total).low;
		packet[2] = getHighLow(RGB_Total).high;
		packet[3] = 0x12;
		packet[4] = 0x38;
		if (index == 6)
		{
			packet[4] = 0x30;
		}
		packet[5] = getHighLow(index * MaxLedsInPacket).low;
		packet[6] = getHighLow(index * MaxLedsInPacket).high;
		packet[7] = 0x00;
		packet = packet.concat(rgbPeriod);
		device.write(packet, 64);
		// device.log(packet);
  }
  led_show();
  device.pause(1);
}

function grabColors(shutdown = false) 
{
	let rgbdata = [];

	for(let iIdx = 0; iIdx < vKeys.length; iIdx++)
	{
		let iPxX = vKeyPositions[iIdx][0];
		let iPxY = vKeyPositions[iIdx][1];
		let color;

		if(shutdown)
		{
			color = hexToRgb(shutdownColor);
		}
		else if (LightingMode === "Forced")
		{
			color = hexToRgb(forcedColor);
		}
		else
		{
			color = device.color(iPxX, iPxY);
		}

		let iLedIdx = vKeys[iIdx] * 3;
		rgbdata[iLedIdx] = color[0];
		rgbdata[iLedIdx+1] = color[1];
		rgbdata[iLedIdx+2] = color[2];
	}

	let Fill = new Array(24).fill(0);
	rgbdata = rgbdata.concat(Fill);
	return rgbdata;
}

export function Shutdown() 
{

}
//1a81:2075
export function Validate(endpoint) 
{
	return endpoint.interface === 1 && endpoint.usage === 0x1a81 && endpoint.usage_page === 0x2075;
}
